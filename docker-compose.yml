version: '3'

networks:
  laravel:

services:
  site:
    image: nginx:stable
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/app
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
      - deepstack
      - watcher
      - queue
    networks:
      - laravel

  mysql:
    image: mysql:5.7.29
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/app
    networks:
      - laravel

  queue:
    image: ipunktbs/laravel-queue-worker
    container_name: queue
    restart: unless-stopped
    tty: true
    environment:
      QUEUE_CONNECTION: database
    volumes:
      - ./src:/var/www/app
    networks:
      - laravel

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./src:/var/www/app
    working_dir: /var/www/app
    depends_on:
      - php
    networks:
      - laravel
    entrypoint: ['composer']

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www/app
    working_dir: /var/www/app
    entrypoint: ['npm']

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/app
    depends_on:
      - mysql
    working_dir: /var/www/app
    networks:
      - laravel
    entrypoint: ['php', '/var/www/app/artisan']

  deepstack:
    image: deepquestai/deepstack
    restart: unless-stopped
    volumes:
      - localstorage:/datastore
    environment:
      - VISION-DETECTION=True
    networks:
      - laravel
    ports:
      - "5001:5000"

  watcher:
    image: akmolina28/webhook-folder-watcher
    volumes:
      - ./src:/var/www/app
    restart: unless-stopped
    environment:
      - WATCH_FOLDER=/var/www/app/storage/app/public
      - WEBHOOK_URL=http://nginx:80/webhook-receiving-url
    networks:
      - laravel

  mysql_testing:
    image: mysql:5.7.29
    container_name: mysql_testing
    tty: true
    ports:
      - "33066:3306"
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql_testing

  phpunit:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: phpunit
    volumes:
      - ./src:/var/www/app
    depends_on:
      - mysql_testing
    working_dir: /var/www/app
    entrypoint: ['./vendor/phpunit/phpunit/phpunit']

volumes:
  localstorage:
